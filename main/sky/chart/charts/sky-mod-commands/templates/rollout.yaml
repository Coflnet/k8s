{{ if .Values.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: 2592000
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: {{ .Chart.Name }}
      imagePullSecrets:
      {{ toYaml .Values.global.imagePullSecrets | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag  }}
        ports:
           {{ toYaml .Values.ports | nindent 10 }}
        env:
          - name: REDIS_HOST
            value: {{ .Values.global.redis.name }}
          - name: REDIS_FLIP_INSTANCES__0 
            value: "sky-bfcs-redis,syncTimeout=1000"
          - name: REDIS_FLIP_INSTANCES__1
            valueFrom:
              secretKeyRef:
                name: redis-edge
                key: us_connection
          - name: REDIS_FLIP_INSTANCES__2
            valueFrom:
              secretKeyRef:
                name: tfm-redis
                key: tfm-1
          - name: MOD_REDIS_HOST
            value: {{ .Chart.Name }}-redis
          {{ if .Values.envVars }}
          {{ toYaml .Values.envVars | nindent 10 }}
          {{ end }}
          {{ toYaml .Values.global.envVars | nindent 10 }}
          {{ toYaml .Values.global.frontendEnvVars | nindent 10 }}
        readinessProbe:
         {{ toYaml .Values.readinessProbe | nindent 10 }}
        resources:
         {{ toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        {{ range .Values.global.volumes }}
        - name: {{ .mountName }}
          mountPath: {{ .mountPath }}
        {{ end }}
        - name: scylla-pfx
          mountPath: /tls/scylla/secret/db.pfx
          subPath: db.pfx
      volumes: 
        - name: scylla-pfx
          secret:
            secretName: scylla-pfx
            items:
            - key: db.pfx
              path: db.pfx
      {{ range .Values.global.volumes }}
        - name: {{ .mountName }}
          {{ if eq .type "configmap"  }}
          configMap:
            name: {{ .name }}
          {{ else}}
          secret:
            secretName: {{ .name }}
          {{ end }}
      {{ end }}
  strategy:
    canary:
    {{ toYaml .Values.canary | nindent 6 }}
{{ end }}
