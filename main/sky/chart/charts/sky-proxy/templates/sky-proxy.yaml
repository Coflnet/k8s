{{ if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  progressDeadlineSeconds: 2592000
  strategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default 1 }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default 0 }}
  selector:
    matchLabels:
      name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
        app: {{ .Chart.Name }}
      annotations:
  {{- with .Values.global }}
  {{- if .podAnnotations }}
{{ toYaml .podAnnotations | nindent 8 }}
  {{- end }}
  {{- end }}
    spec:
      {{- with .Values.global }}
      {{- if .imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- end }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Chart.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag  }}
          ports:
             {{ toYaml .Values.ports | nindent 10 }}
          env:
            - name: REDIS_HOST
              value: "{{ .Chart.Name }}-redis,syncTimeout=1000"
            {{ if .Values.envVars }}
            {{ toYaml .Values.envVars | nindent 12 }}
            {{ end }}
            {{- with .Values.global }}
            {{- if .envVars }}
{{ toYaml .envVars | nindent 12 }}
            {{- end }}
            {{- end }}
          readinessProbe:
            {{ toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          {{- with .Values.global }}
          {{- if .volumes }}
          volumeMounts:
{{- range .volumes }}
            - name: {{ .mountName }}
              mountPath: {{ .mountPath }}
{{- end }}
          {{- end }}
          {{- end }}
      {{- with .Values.global }}
      {{- if .volumes }}
      volumes:
{{- range .volumes }}
        - name: {{ .mountName }}
          {{- if eq .type "configmap"  }}
          configMap:
            name: {{ .name }}
          {{- else}}
          secret:
            secretName: {{ .name }}
          {{- end }}
{{- end }}
      {{- end }}
      {{- end }}
{{ end }}
